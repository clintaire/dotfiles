#!/bin/bash

# i3-specific theme cycling script (independent from Hyprland)
# Uses Omarchy's theme system but only applies to i3

# Get list of available themes (from .local/share where actual themes are)
THEMES_DIR="$HOME/.local/share/omarchy/themes"
CURRENT_THEME_LINK="$HOME/.config/omarchy/current/theme"

# Get current theme name (handle both symlink and directory)
if [ -L "$CURRENT_THEME_LINK" ]; then
    CURRENT_THEME=$(basename "$(readlink "$CURRENT_THEME_LINK")")
elif [ -d "$CURRENT_THEME_LINK" ]; then
    # If not a symlink, default to first theme
    CURRENT_THEME=""
else
    CURRENT_THEME=""
fi

# Get sorted list of themes
THEME_LIST=($(ls "$THEMES_DIR" | sort))

# Find current theme index
CURRENT_INDEX=-1
for i in "${!THEME_LIST[@]}"; do
    if [ "${THEME_LIST[$i]}" = "$CURRENT_THEME" ]; then
        CURRENT_INDEX=$i
        break
    fi
done

# Get next theme (wrap around)
NEXT_INDEX=$(( ($CURRENT_INDEX + 1) % ${#THEME_LIST[@]} ))
NEXT_THEME="${THEME_LIST[$NEXT_INDEX]}"

# Update the symlink to point to new theme
ln -nsf "$THEMES_DIR/$NEXT_THEME" "$CURRENT_THEME_LINK"

# Extract ALL colors from theme's i3.conf
THEME_I3_CONF="$THEMES_DIR/$NEXT_THEME/i3.conf"
if [ -f "$THEME_I3_CONF" ]; then
    # Read all bar color variables
    declare -A bar_colors
    while IFS= read -r line; do
        if [[ $line =~ ^set\ \$bar_([a-z_]+)\ +(\#[0-9a-fA-F]+) ]]; then
            var_name="${BASH_REMATCH[1]}"
            hex_value="${BASH_REMATCH[2]}"
            bar_colors[$var_name]="$hex_value"
        fi
    done < "$THEME_I3_CONF"

    # Extract color values for i3status
    COLOR_GOOD=$(grep -m1 "set \$green" "$THEME_I3_CONF" | awk '{print $3}')
    COLOR_DEGRADED=$(grep -m1 "set \$yellow" "$THEME_I3_CONF" | awk '{print $3}')
    COLOR_BAD=$(grep -m1 "set \$red" "$THEME_I3_CONF" | awk '{print $3}')

    # Update i3 main config with new bar colors
    I3_CONFIG="$HOME/.config/i3/config"

    # Replace bar colors in i3 config
    sed -i "/^        colors {/,/^        }/{
        s|^                background .*|                background ${bar_colors[bg]}|
        s|^                statusline .*|                statusline ${bar_colors[fg]}|
        s|^                separator  .*|                separator  ${bar_colors[separator]}|
        s|^                focused_workspace .*|                focused_workspace  ${bar_colors[focused_bg]} ${bar_colors[focused_bg]} ${bar_colors[focused_fg]}|
        s|^                active_workspace .*|                active_workspace   ${bar_colors[active_bg]} ${bar_colors[active_bg]} ${bar_colors[active_fg]}|
        s|^                inactive_workspace .*|                inactive_workspace ${bar_colors[inactive_bg]} ${bar_colors[inactive_bg]} ${bar_colors[inactive_fg]}|
        s|^                urgent_workspace .*|                urgent_workspace   ${bar_colors[urgent_bg]} ${bar_colors[urgent_bg]} ${bar_colors[urgent_fg]}|
        s|^                binding_mode .*|                binding_mode       ${bar_colors[binding_bg]} ${bar_colors[binding_bg]} ${bar_colors[binding_fg]}|
    }" "$I3_CONFIG"

    # Generate i3status config with theme colors
    cat > "$HOME/.config/i3status/config" << EOF
# i3status configuration file (auto-generated by theme)
# see "man i3status" for documentation

general {
        output_format = "i3bar"
        colors = true
        interval = 5
        color_good = "${COLOR_GOOD:-#a6e3a1}"
        color_degraded = "${COLOR_DEGRADED:-#f9e2af}"
        color_bad = "${COLOR_BAD:-#f38ba8}"
}

order += "wireless _first_"
order += "ethernet _first_"
order += "battery all"
order += "disk /"
order += "load"
order += "memory"
order += "tztime local"

wireless _first_ {
        format_up = "W: (%quality at %essid) %ip"
        format_down = "W: down"
}

ethernet _first_ {
        format_up = "E: %ip (%speed)"
        format_down = "E: down"
}

battery all {
        format = "BAT %percentage %remaining"
        format_down = "No battery"
        status_chr = "âš¡ CHR"
        status_bat = "ðŸ”‹ BAT"
        status_unk = "? UNK"
        status_full = "â˜» FULL"
        path = "/sys/class/power_supply/BAT%d/uevent"
        low_threshold = 10
}

disk "/" {
        format = "%avail"
}

load {
        format = "%1min"
}

memory {
        format = "%used | %available"
        threshold_degraded = "1G"
        format_degraded = "MEMORY < %available"
}

tztime local {
        format = "%Y-%m-%d %H:%M:%S"
}
EOF

    # Rofi config is now automatically synced via symlink to current theme
    # The rofi config at ~/.config/rofi/config.rasi points to:
    # ~/.config/omarchy/current/theme/rofi.rasi which is a symlink that updates
    # when we switch themes above (line 37)

    # Update dunst config to match theme
    if [ -f "$THEMES_DIR/$NEXT_THEME/dunstrc" ]; then
        cp "$THEMES_DIR/$NEXT_THEME/dunstrc" "$HOME/.config/dunst/dunstrc"
        # Restart dunst to apply new colors
        if command -v dunst &> /dev/null; then
            pkill dunst 2>/dev/null || true
            dunst &
        fi
    fi
fi

# Set wallpaper if feh is installed and wallpaper exists
WALLPAPER_DIR="$THEMES_DIR/$NEXT_THEME/backgrounds"
if command -v feh &> /dev/null && [ -d "$WALLPAPER_DIR" ]; then
    # Get first wallpaper from theme
    WALLPAPER=$(find "$WALLPAPER_DIR" -type f \( -name "*.png" -o -name "*.jpg" -o -name "*.jpeg" \) | head -n 1)
    if [ -n "$WALLPAPER" ]; then
        feh --bg-fill "$WALLPAPER" &
    fi
fi

# Reload i3 to apply new theme colors
i3-msg restart > /dev/null 2>&1

# Show notification (optional, may fail if notification daemon not running)
notify-send "i3 Theme" "Switched to $NEXT_THEME" -t 2000 2>/dev/null || true
